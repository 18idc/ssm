<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.q18idc.ssm.dao.ClassesMapper">
    <resultMap id="BaseResultMap" type="com.q18idc.ssm.entity.Classes">
        <id column="cid" jdbcType="INTEGER" property="cid"/>
        <result column="cname" jdbcType="VARCHAR" property="cname"/>
        <result column="tid" jdbcType="INTEGER" property="tid"/>
    </resultMap>

    <resultMap id="OneToOne" type="com.q18idc.ssm.entity.Classes">
        <id column="cid" jdbcType="INTEGER" property="cid"/>
        <result column="cname" jdbcType="VARCHAR" property="cname"/>
        <association property="teacher" javaType="teacher" >
            <id column="tid" property="tid" />
            <result column="tname" property="tname" />
        </association>
    </resultMap>

    <select id="selectOneToOne" parameterType="com.q18idc.ssm.entity.ClassesExample" resultMap="OneToOne">
        select
        <if test="distinct">
            distinct
        </if>
        * FROM
        classes c,teacher t
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
            and c.tid=t.tid
        </if>

        <if test="_parameter == null">
            WHERE c.tid=t.tid
        </if>

        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <resultMap id="OneToMany" type="classes">
        <id column="cid" jdbcType="INTEGER" property="cid"/>
        <result column="cname" jdbcType="VARCHAR" property="cname"/>
        <collection property="students" ofType="student">
            <id column="sid" property="sid"/>
            <result column="sname" property="sname"/>
        </collection>
    </resultMap>
    <select id="selectOneToManyByCid" parameterType="classes" resultMap="OneToMany">
        select * from classes c,student s where s.cid=c.cid and c.cid=#{cid}
    </select>


    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        cid, cname, tid
    </sql>
    <select id="selectByExample" parameterType="com.q18idc.ssm.entity.ClassesExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from classes
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from classes
        where cid = #{cid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE FROM classes
        WHERE cid = #{cid,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.q18idc.ssm.entity.ClassesExample">
        delete from classes
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.q18idc.ssm.entity.Classes">
        INSERT INTO classes (cid, cname, tid
        )
        VALUES (#{cid,jdbcType=INTEGER}, #{cname,jdbcType=VARCHAR}, #{tid,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.q18idc.ssm.entity.Classes">
        insert into classes
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="cid != null">
                cid,
            </if>
            <if test="cname != null">
                cname,
            </if>
            <if test="tid != null">
                tid,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="cid != null">
                #{cid,jdbcType=INTEGER},
            </if>
            <if test="cname != null">
                #{cname,jdbcType=VARCHAR},
            </if>
            <if test="tid != null">
                #{tid,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.q18idc.ssm.entity.ClassesExample" resultType="java.lang.Long">
        select count(*) from classes
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update classes
        <set>
            <if test="record.cid != null">
                cid = #{record.cid,jdbcType=INTEGER},
            </if>
            <if test="record.cname != null">
                cname = #{record.cname,jdbcType=VARCHAR},
            </if>
            <if test="record.tid != null">
                tid = #{record.tid,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update classes
        set cid = #{record.cid,jdbcType=INTEGER},
        cname = #{record.cname,jdbcType=VARCHAR},
        tid = #{record.tid,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.q18idc.ssm.entity.Classes">
        update classes
        <set>
            <if test="cname != null">
                cname = #{cname,jdbcType=VARCHAR},
            </if>
            <if test="tid != null">
                tid = #{tid,jdbcType=INTEGER},
            </if>
        </set>
        where cid = #{cid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.q18idc.ssm.entity.Classes">
        UPDATE classes
        SET cname = #{cname,jdbcType=VARCHAR},
            tid   = #{tid,jdbcType=INTEGER}
        WHERE cid = #{cid,jdbcType=INTEGER}
    </update>
</mapper>